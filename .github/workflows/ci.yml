name: CI

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  test:
    name: Build, Lint & Test
    runs-on: ubuntu-latest
    outputs:
      build-status: ${{ steps.build.outcome }}
      test-status: ${{ steps.test.outcome }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        id: build
        run: npm run build

      - name: Lint
        run: npm run lint

      - name: Run tests with coverage
        id: test
        run: npm test

  # Run installation tests after main CI passes
  installation-test:
    name: Installation Tests
    needs: test
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        node-version: ['20.x', '22.x']
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Pack plugin
        run: yarn pack

      - name: Create test directory
        run: mkdir plugin-test && cd plugin-test
        shell: bash

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli

      - name: Install plugin from packed tarball (Unix)
        if: runner.os != 'Windows'
        run: |
          TARBALL=$(find . -name "sf-metalinter-*.tgz" | head -1)
          TARBALL=${TARBALL#./}
          ABSOLUTE_PATH="$PWD/$TARBALL"
          echo "Installing from: $ABSOLUTE_PATH"
          echo "y" | sf plugins install "file://$ABSOLUTE_PATH"
        shell: bash

      - name: Install plugin from packed tarball (Windows)
        if: runner.os == 'Windows'
        run: |
          for /f %%i in ('dir /b sf-metalinter-*.tgz') do set TARBALL=%%i
          set ABSOLUTE_PATH=%CD%\%TARBALL%
          set FILE_URL=file:///%ABSOLUTE_PATH:\=/%
          echo Installing from: %FILE_URL%
          echo y | sf plugins install "%FILE_URL%"
        shell: cmd

      - name: Verify plugin installation
        run: |
          cd plugin-test
          sf plugins
          sf plugins:inspect sf-metalinter
          sf metalinter --help
        shell: bash

      - name: Test plugin basic functionality
        run: |
          cd plugin-test
          mkdir -p test-metadata/force-app/main/default/classes
          echo 'public class TestClass { }' > test-metadata/force-app/main/default/classes/TestClass.cls
          echo '<?xml version="1.0" encoding="UTF-8"?><ApexClass xmlns="http://soap.sforce.com/2006/04/metadata"><apiVersion>58.0</apiVersion><status>Active</status></ApexClass>' > test-metadata/force-app/main/default/classes/TestClass.cls-meta.xml
          sf metalinter lint -p "test-metadata" || echo "Linter executed successfully (exit code expected)"
        shell: bash

      - name: Cleanup
        if: always()
        run: |
          cd plugin-test || true
          sf plugins uninstall sf-metalinter || true
        shell: bash

  # Summary job that reports overall status
  installation-test-summary:
    name: Installation Test Summary
    runs-on: ubuntu-latest
    needs: installation-test
    if: always() && github.event_name == 'pull_request'
    steps:
      - name: Check installation test results
        run: |
          if [[ "${{ needs.installation-test.result }}" != "success" ]]; then
            echo "❌ Installation tests failed"
            exit 1
          fi
          echo "✅ All installation tests passed across all platforms"
